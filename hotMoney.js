var string = "b,18154205800023055,113339,1,2034778000,2.17,4.95,36660,148981963.00,68760906.00,37250,150,37250,480,1,0,2034778000,0,2034778000;s,47749661205825616,103132,1,2680267040,0.50,1.85,27000,65817692.31,132672000.00,27830,200000,27830,205954,0,3,0,2730452170,-8191356510;s,47749661205825616,105051,1,2811089470,0.41,1.81,26990,74906246.67,181321995.29,27830,200000,27830,205954,0,3,0,2730452170,-8191356510;s,47749661205825616,111536,1,2700000000,0.26,1.85,27000,71198413.04,268704490.91,27830,200000,27830,205954,0,3,0,2730452170,-8191356510;b,59217041815333317,94317,1,4012800000,0.19,-5.00,36480,292560480.00,1560322560.00,0,0,36480,4568526,2,1,3100800000,2705539200,790521600;s,59217041815333317,94317,2,2705539200,0.19,-5.00,36480,292560480.00,1560322560.00,0,0,36480,4568526,2,1,3100800000,2705539200,790521600;b,59217041815333317,121024,1,2188800000,0.10,-5.00,36480,209629175.17,2026415360.00,0,0,36480,4568526,2,1,3100800000,2705539200,790521600;s,34641719089573667,95946,1,2774183000,0.90,2.37,41000,120494444.44,133650538.46,41050,485,41050,3380,0,1,0,2774183000,-2774183000;s,18063426072758458,90049,-1,3273546680,0.20,-4.97,17980,15869148.00,79345740.00,0,0,17980,8903704,0,1,0,3273546680,3273546680;s,20024911381434086,104100,5,2117600000,0.23,-4.99,26470,44181077.00,189087666.47,0,0,26470,30081,0,2,0,2205833333.3333335,-13235000000;s,20024911381434086,122947,1,2647000000,0.22,-4.99,26470,47256512.86,216624584.41,0,0,26470,30081,0,2,0,2205833333.3333335,-13235000000;s,11964419322927535,92238,1,2197206000,1.06,-4.98,15070,55270166.88,52018980.59,0,0,15070,578993,1,1,3062455073.3333335,2197206000,6990159220;b,11964419322927535,93348,3,3062455073,4.17,-4.98,15070,504977490.42,121194597.70,0,0,15070,578993,1,1,3062455073.3333335,2197206000,6990159220;s,52975109254504632,90046,-1,2994976380,0.14,-4.98,29370,13090628.57,91634400.00,0,0,29370,2775225,0,1,0,2994976380,2994976380;s,4528607775462304,102159,1,4287398640,0.88,-4.67,32030,62933825.20,71310849.28,29760,500,31920,787,0,1,0,4287398640,-4287398640;s,33406621820337161,121218,1,2969259280,0.58,-2.02,40650,77213126.43,133013909.19,43560,202143,43560,134163,0,1,0,2969259280,-2969259280;s,62177651435283872,94655,3,3177202163,0.94,4.99,44570,183176949.03,194188598.97,44570,51907,44570,190,0,1,0,3177202163.3333335,-9531606490;b,7385624172574740,93621,6,2237501000,0.51,-4.97,11100,225114822.94,439920600.00,9230,10000,11100,31015213,1,1,2237501000,2906346300,10518659700;s,7385624172574740,95030,1,2906346300,2.05,-4.97,11100,349891578.98,170915651.83,9230,10000,11100,31015213,1,1,2237501000,2906346300,10518659700;b,35669480110084448,91201,3,2327798667,0.90,-4.99,9520,397846693.33,439725292.63,9520,5600,9520,5380656,2,0,2400986840,0,9603947360;b,35669480110084448,93812,1,2620551360,0.49,-4.99,9520,240644534.47,491751874.78,9520,5600,9520,5380656,2,0,2400986840,0,9603947360;s,13937270451301973,93506,3,3030042327,1.62,4.95,17180,331891830.00,205251012.41,17180,24450,17180,300,0,1,0,3030042326.6666665,-9090126980;s,54419429862704331,103508,2,4101656240,0.70,-4.98,21010,83740253.23,119068484.79,0,0,21010,169870,0,1,0,4101656240,-8203312480;b,26997316501080743,91242,3,2539297750,0.50,-4.89,7590,312596485.38,625192970.77,0,0,7590,7741287,1,2,2539297750,2283675405,-6084159180;s,26997316501080743,91517,4,2287013108,0.37,-4.89,7590,224673391.02,602533185.00,0,0,7590,7741287,1,2,2539297750,2283675405,-6084159180;s,26997316501080743,102648,2,2277000000,0.11,-4.89,7590,110911270.73,976284698.40,0,0,7590,7741287,1,2,2539297750,2283675405,-6084159180;b,42387718866026650,90803,1,2152500000,4.27,-0.44,20500,267097233.33,62600914.06,21610,810277,21610,300,5,2,9410955696.666666,2444631250,51576471680;b,42387718866026650,90803,1,6553340550,6.31,-0.44,20500,478575062.50,75813871.29,21610,810277,21610,300,5,2,9410955696.666666,2444631250,51576471680;b,42387718866026650,91728,2,16276792465,7.42,4.95,21610,625601267.62,84276046.12,21610,810277,21610,300,5,2,9410955696.666666,2444631250,51576471680;s,42387718866026650,102158,1,2161000000,15.65,4.95,21610,1652946841.90,105629270.72,21610,810277,21610,300,5,2,9410955696.666666,2444631250,51576471680;s,42387718866026650,102428,1,2728262500,15.56,4.95,21610,1836197583.81,117971721.38,21610,810277,21610,300,5,2,9410955696.666666,2444631250,51576471680"

var data = {}
var db = null;
const openRequest = indexedDB.open("hotmoney", 1);
openRequest.onerror = e => {
    console.log(e.target.error);
}

openRequest.onsuccess = e => {
    db = e.target.result
    console.log('DataBase is loaded Sucessfully');
}

openRequest.onupgradeneeded = e => {
    //create tables here DDL commands must be executed here they dont work if they are loaded in onsuccess!
    db = e.target.result
    const htmoneytbl = db.createObjectStore("hotmoneyTable", { keyPath: "date" })
    console.log("on upgrade is loaded");
}

function raedAllData() {
    var resultObject = {};
    var readRequest = db
        .transaction("hotmoneyTable", "readonly")
        .objectStore("hotmoneyTable")
        .openCursor()
    readRequest.onsuccess = e => {
        const cursor = e.target.result
        if (cursor) {
            var title = cursor.key;
            var data = cursor.value.value
            resultObject[title] = data
            cursor.continue()

        }
    }
    console.log(JSON.stringify(resultObject));
    return resultObject;
}

function HMdataExtractor(dbObject) { //string="...;a,b,c,..,d "
    //    /*
    var keys = Object.keys(dbObject); //[a,b,c]
    keys.forEach(key => {
        var date = key
        var value = dbObject[key]
        var rows = value.split(";") // rows=["a,b,c,...,z","a2,b2,c2,...,z2"]

        rows.forEach((row, index, array) => {
            if (row!=undefined) {
                
            
            var cols = row.split(",") // [a,b,c,...,z]
            var sell = 0;
            var buy = 0
            var buyer = 0;
            var seller = 0;
            if (cols[3] >= 0) {
                if (cols[0] === 's') {
                    sell = parseInt(cols[4])
                    seller = parseInt(cols[3])
                } else {
                    buy = parseInt(cols[4])
                    buyer = parseInt(cols[3])
                }
                console.log(cols[0], sell, seller, buy, buyer);
                if (!Object.keys(data).includes(cols[1])) {
                    data[cols[1]] = {}
                    data[cols[1]][date] = {
                        "meanbuy": buy,
                        "meansell": sell,
                        "buyer": buyer,
                        "seller": seller
                    }
                } else {
                    data[cols[1]][date]["meanbuy"] += buy
                    data[cols[1]][date]["meansell"] += sell
                    data[cols[1]][date]["buyer"] += buyer
                    data[cols[1]][date]["seller"] += seller
                }
                }
            }


        })
        // */
        // var date = "99/07/02";
        // var rows = string.split(";") // rows=["a,b,c,...,z","a2,b2,c2,...,z2"]
        // rows.forEach((element, index, array) => {
        //     var cols = element.split(",") // [a,b,c,...,z]
        //     var sell = 0;
        //     var buy = 0
        //     var buyer = 0;
        //     var seller = 0;
        //     if (cols[3] >=0) {
        //         if (cols[0] === 's') {
        //             sell = parseInt(cols[4])
        //             seller = parseInt(cols[3])
        //         } else {
        //             buy = parseInt(cols[4])
        //             buyer = parseInt(cols[3])
        //         }
        //         console.log(cols[0], sell, seller, buy, buyer);


        //         if (!Object.keys(data).includes(cols[1])) {
        //             data[cols[1]] = {}
        //             data[cols[1]][date] = {
        //                 "meanbuy": buy,
        //                 "meansell": sell,
        //                 "buyer": buyer,
        //                 "seller": seller
        //             }
        //         } else {
        //             data[cols[1]][date]["meanbuy"] += buy
        //             data[cols[1]][date]["meansell"] += sell
        //             data[cols[1]][date]["buyer"] += buyer
        //             data[cols[1]][date]["seller"] += seller
        //         }
        //     }
    });
}
HMdataExtractor(string)
console.log(JSON.stringify(data))


/*
read database;
convert data;
*/